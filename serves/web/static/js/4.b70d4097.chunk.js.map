{"version":3,"sources":["containers/login/index.module.less","containers/login/index.js"],"names":["module","exports","login","login-content","login-form","zfc","LoginPage","inject","antd_es_form__WEBPACK_IMPORTED_MODULE_14__","create","name","observer","props","_this","Object","_Users_cengfucheng_WebstormProjects_react_react_cli_3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__","this","_Users_cengfucheng_WebstormProjects_react_react_cli_3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_10__","_Users_cengfucheng_WebstormProjects_react_react_cli_3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_11__","call","onLoginSubmit","e","preventDefault","form","validateFields","err","values","console","log","$Api","fetch_login_user","then","data","userStore","onSignUp","isSign","Cookies","set","menuIndex","history","push","catch","nextProps","nextState","nextContext","getFieldDecorator","react__WEBPACK_IMPORTED_MODULE_16___default","a","createElement","style","color","className","concat","onSubmit","Item","rules","required","message","antd_es_input__WEBPACK_IMPORTED_MODULE_5__","prefix","antd_es_icon__WEBPACK_IMPORTED_MODULE_7__","type","placeholder","valuePropName","initialValue","antd_es_checkbox__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_19__","float","to","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","width","htmlType","Component"],"mappings":"gFACAA,EAAAC,QAAA,CAAkBC,MAAA,eAAAC,gBAAA,uBAAAC,aAAA,oBAAAC,IAAA,oTC4BZC,KAJLC,YAAO,eACPA,YAAO,cAEPC,EAAA,EAAKC,OAAO,CAAEC,KAAM,yBADpBC,8BAGG,SAAAL,EAAYM,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAV,IACfO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAR,GAAAa,KAAAH,KAAMJ,KAeVQ,cAAgB,SAACC,GACbA,EAAEC,iBACFT,EAAKD,MAAMW,KAAKC,eAAe,SAACC,EAAKC,GAC5BD,IACDE,QAAQC,IAAI,SAAUF,GACtBb,EAAKgB,KAAKC,iBAAiBJ,GACtBK,KAAK,SAAAC,GACFL,QAAQC,IAAI,2BAAQI,GACpBnB,EAAKD,MAAMqB,UAAUC,SAASF,GAC9BnB,EAAKD,MAAMqB,UAAUE,QAAS,EAC9BC,IAAQC,IAAI,SAAS,OACrBxB,EAAKD,MAAMqB,UAAUK,UAAY,EACjCzB,EAAKD,MAAM2B,QAAQC,KAAK,OAE3BC,MAAM,SAAAhB,GAAG,OAAIE,QAAQC,IAAI,eAAKH,SA5B3CZ,EAAKD,MAAMqB,UAAUE,QAAS,EAFftB,qFAMG6B,EAAWC,EAAWC,GAOxC,OAAO,mCA8DP,IAIQC,EAAsB7B,KAAKJ,MAAMW,KAAjCsB,kBAER,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAPK,CACVC,MAAO,OAMcC,UAAS,GAAAC,OAAKH,IAAM/C,MAAX,KAAAkD,OAAoBH,IAAM5C,MACpDyC,EAAAC,EAAAC,cAAA,OAAKG,UAAS,GAAAC,OAAKH,IAAM,mBACrBH,EAAAC,EAAAC,cAAAxC,EAAA,GAAM6C,SAAUrC,KAAKI,cAAe+B,UAAS,GAAAC,OAAKH,IAAM,gBACpDH,EAAAC,EAAAC,cAAAxC,EAAA,EAAM8C,KAAN,KACKT,EAAkB,WAAY,CAC3BU,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,sDAJpBZ,CAOGC,EAAAC,EAAAC,cAAAU,EAAA,GAAOC,OAAQb,EAAAC,EAAAC,cAAAY,EAAA,GAAMC,KAAK,OAAOZ,MAAO,CAACC,MAAO,mBACzCY,YAAY,mBAI3BhB,EAAAC,EAAAC,cAAAxC,EAAA,EAAM8C,KAAN,KACKT,EAAkB,WAAY,CAC3BU,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,gDAJpBZ,CAQGC,EAAAC,EAAAC,cAAAU,EAAA,GAAOC,OAAQb,EAAAC,EAAAC,cAAAY,EAAA,GAAMC,KAAK,OAAOZ,MAAO,CAACC,MAAO,mBACzCW,KAAK,WACLC,YAAY,qCAI3BhB,EAAAC,EAAAC,cAAAxC,EAAA,EAAM8C,KAAN,KACIR,EAAAC,EAAAC,cAAA,SACKH,EAAkB,WAAY,CAC3BkB,cAAe,UACfC,cAAc,GAFjBnB,CAGEC,EAAAC,EAAAC,cAAAiB,EAAA,oCACHnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMjB,MAAO,CAACkB,MAAO,SAAUC,GAAG,UAAlC,6BAEJtB,EAAAC,EAAAC,cAAAqB,EAAA,GAAQpB,MAAO,CAACqB,MAAM,QAAST,KAAK,UAAUU,SAAS,UAAvD,WACAzB,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAME,GAAG,aAAT,4BA5HRI","file":"static/js/4.b70d4097.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login--1O4gT\",\"login-content\":\"login-content--qfSxZ\",\"login-form\":\"login-form--9sqwA\",\"zfc\":\"zfc--rYN4D\"};","/**\n *\n * name: index\n * date: 2019-05-19\n * author: cengfucheng\n * about: login\n *\n */\n\n// import './index.module.less';\nimport style from './index.module.less';\nimport React, { Component} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport Cookies from 'js-cookie';\n\nimport { Link } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'\n\n\nimport { inject, observer} from \"mobx-react\";\n\n\nexport default\n@inject('userStore')\n@inject('appStore')\n@observer\n@Form.create({ name: 'normal_login' })\nclass LoginPage extends Component{\n    constructor(props) {\n        super(props);\n        this.props.userStore.isSign = false;     // 状态登陆判断\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        // console.log(nextProps,123321);\n        // let { history, location } = nextProps;\n        // console.log(nextProps.history.action ,nextProps.history.location, nextProps.location ,1233)\n        // if(history.action == 'PUSH' && history.location.pathname == '/') {\n        //     history.push('/about');\n        // }\n        return true;\n    }\n\n    onLoginSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('form: ', values);\n                this.$Api.fetch_login_user(values)\n                    .then(data => {\n                        console.log('返回数据' ,data);\n                        this.props.userStore.onSignUp(data);\n                        this.props.userStore.isSign = true;     // 状态登陆判断\n                        Cookies.set('logins','zfc');\n                        this.props.userStore.menuIndex = 0;\n                        this.props.history.push('/');\n                    })\n                    .catch(err => console.log('错误',err));\n                // fetch('http://127.0.0.1:3000/setting/advertise',{\n                //     method: 'POST',\n                //     body: JSON.stringify(values),\n                //     headers: {\n                //         'Content-Type': 'application/json'\n                //     },\n                //     credentials: 'include'\n                // })\n                //     .then(res => {\n                //         return res.json();\n                //     })\n                //     .then(data => {\n                //         data = JSON.parse(JSON.stringify(data).replace(/\\|/g,'/'));\n                //         console.log(data);\n                //         this.props.appStore.advertiseList = [...data.url];\n                //     })\n                //     .catch(err => console.log(err));\n                // fetch('http://127.0.0.1:3000/login',{\n                //     method: 'POST',\n                //     body: JSON.stringify(values),\n                //     headers: {\n                //         'Content-Type': 'application/json'\n                //     },\n                // })\n                //     .then( res => {\n                //         return res.json();\n                //     })\n                //     .then( data => {\n                //         console.log(data,123);\n                //         this.props.userStore.onSignUp(data);\n                //         this.props.userStore.isSign = true;     // 状态登陆判断\n                //         Cookies.set('logins','zfc');\n                //         this.props.history.push('/');\n                //     })\n                //     .catch( err => {\n                //         console.log(err)\n                //     })\n                // console.log(this.props,111);\n            }\n        });\n    }\n\n    render() {\n\n        let bgColor = {\n            color: 'red',\n        }\n\n        const { getFieldDecorator } = this.props.form;\n        // console.log(style['login-form'],11223311)\n        return (\n            <div style={bgColor} className={`${style.login} ${style.zfc}`}>\n                <div className={`${style['login-content']}`}>\n                    <Form onSubmit={this.onLoginSubmit} className={`${style['login-form']}`}>\n                        <Form.Item>\n                            {getFieldDecorator('username', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入您的账号名'\n                                    }]\n                            })(\n                                <Input prefix={<Icon type='user' style={{color: 'rgba(1,1,1,1)'}} />}\n                                       placeholder='账号'\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入您的密码'\n                                    }\n                                ]\n                            })(\n                                <Input prefix={<Icon type='lock' style={{color: 'rgba(1,1,1,1)'}}/>}\n                                       type='password'\n                                       placeholder='请输入密码'\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            <p>\n                                {getFieldDecorator('remember', {\n                                    valuePropName: 'checked',\n                                    initialValue: true,\n                                })(<Checkbox>记住账号</Checkbox>)}\n                                <Link style={{float: 'right'}} to='/login'>忘记密码</Link>\n                            </p>\n                            <Button style={{width:'100%'}} type=\"primary\" htmlType=\"submit\">sign up</Button>\n                            <p>\n                                <Link to='/register'>注册</Link>\n                                {/*<a href='/register'>注册</a>*/}\n                            </p>\n                        </Form.Item>\n\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n// export default\n// @Form.create({ name: 'normal_login' })\n// @connect(mapPropsState, mapPropsDispatch)\n// class LoginPage extends Component{\n//     constructor(props) {\n//         super(props)\n//     }\n//\n//     render() {\n//         const { getFieldDecorator } = this.props.form;\n//         return (\n//             <Form>\n//                 <Form.Item>\n//                     {getFieldDecorator('username', {\n//                         rules: [\n//                             {\n//                                 requestId: true,\n//                                 message: '请输入您的账号名'\n//                             }]\n//                     })(\n//                         <Input prefix={<Icon type='user' style={{color: 'rgba(1,1,1,1)'}} />}\n//                                placeholder='账号'\n//                         />\n//                     )}\n//                 </Form.Item>\n//             </Form>\n//         )\n//     }\n// }\n//\n// function mapPropsState(state) {\n//     return {\n//         // state: xx.xx\n//     }\n// }\n//\n// function mapPropsDispatch(dispatch) {\n//     return {\n//         // action: bindActionCreators(Actions, dispatch)\n//     }\n// }\n\n// 没用装饰器的时候～～～用了装饰器，就不在这么傻了～\n// const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(LoginPage);\n// export default connect(mapPropsState, mapPropsDispatch)(WrappedNormalLoginForm);\n\n// export default connect(mapPropsState, mapPropsDispatch)(LoginPage);"],"sourceRoot":""}