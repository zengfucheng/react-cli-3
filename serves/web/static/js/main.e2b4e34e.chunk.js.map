{"version":3,"sources":["store/appStore.js","store/index.js","store/userStore.js","components/dateView/index.js","actions/LoginAction.js","actions/index.js","logo.svg","containers lazy /^/.//.*$/ groupOptions: {} namespace object","assets/404.svg","components/mobxLoadCompoent/index.js","router/config.js","components/privateRouter/index.js","router/index.js","App.js","serviceWorker.js","index.js","containers/login/index.module.less","containers/home/index.js","containers/login/index.js"],"names":["appStore","age","observable","store","userStore","item","this","user","Object","objectSpread","console","log","userNo","path","icon","key","text","action","__webpack_require__","LoginByUsername","username","password","token","type","payload","LoginAction","module","exports","p","map","./about","./about/","./about/index","./about/index.js","./home","./home/","./home/index","./home/index.js","./home/index.less","./login","./login/","./login/index","./login/index.js","./login/index.module.less","./register","./register/","./register/index","./register/index.js","./register/index.module.less","webpackAsyncContext","req","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","LoadingPage","NProgress","start","done","react_default","a","createElement","React","Component","LoadableComponent","component","Loadable","loader","loading","mobxLoadCompoent_LoadingPage","importCompoent","filesPath","MobxLoadCompoent","concat","layoutComponent","name","exact","PrivateRouter","router","react_router","render","props","logins","Cookies","get","location","pathname","to","createHashHistory","LayoutView","route","index","assign","Router","react_router_dom","_ref","history","from","Header","Sider","Content","App","inject","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","collapsed","toggle","setState","onMenuClick","keyPath","domEvent","Array","menuList","forEach","className","layout","trigger","collapsible","style","background","width","height","menu","onClick","mode","defaultSelectedKeys","Item","padding","children","Boolean","window","hostname","match","ReactDOM","index_module","bind","src_App_0","router_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister","login","login-content","login-form","zfc","HomePage","observer","react__WEBPACK_IMPORTED_MODULE_5___default","LoginPage","antd_es_form__WEBPACK_IMPORTED_MODULE_14__","create","_Users_cengfucheng_WebstormProjects_react_react_cli_3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__","_Users_cengfucheng_WebstormProjects_react_react_cli_3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_10__","_Users_cengfucheng_WebstormProjects_react_react_cli_3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_11__","onLoginSubmit","preventDefault","form","validateFields","err","values","fetch","method","body","JSON","stringify","headers","Content-Type","res","json","data","onSignUp","set","push","catch","getFieldDecorator","react__WEBPACK_IMPORTED_MODULE_16___default","color","onSubmit","rules","required","message","antd_es_input__WEBPACK_IMPORTED_MODULE_5__","prefix","antd_es_icon__WEBPACK_IMPORTED_MODULE_7__","placeholder","valuePropName","initialValue","antd_es_checkbox__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_19__","float","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","htmlType"],"mappings":"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","file":"static/js/main.e2b4e34e.chunk.js","sourcesContent":["/**\n *\n * name: appStore\n * date: 2019-05-26\n * author: cengfucheng\n * about:\n *\n */\n\nimport { observable, action, computed } from 'mobx';\nimport { observer } from \"mobx-react\";\n\nclass AppStore {\n    @observable names = 'z';\n    age = '15';\n}\n\nexport default new AppStore();","/**\n *\n * name: index\n * date: 2019-05-09\n * author: cengfucheng\n * about:  store\n *\n */\n\n// redux 的实现\n// import { createStore } from \"redux\";\n// import { composeWithDevTools } from 'redux-devtools-extension';     // devtool组件，检测store的状态变更情况\n//\n// import rootReducer from '../reducers';\n// export default createStore(rootReducer,composeWithDevTools());\n\n// mobx 的实现\nimport appStore from './appStore';\nimport userStore from './userStore';\n\nconst store = {\n    appStore,\n    userStore\n}\nexport default store;","/**\n *\n * name: userStore\n * date: 2019-05-27\n * author: cengfucheng\n * about: 用户store\n *\n */\n\nimport { observable, action} from \"mobx\";\n\nclass UserStore {\n    @observable user = {\n        userNo: '',\n    }\n    @observable menuList = [\n        {\n            path: '/home',\n            icon: 'user',\n            key: 0,\n            text: 'nav 1'\n        },\n        {\n            path: '/about',\n            icon: 'user',\n            key: 1,\n            text: 'nav 2'\n        },\n        {\n            path: '/login',\n            icon: 'user',\n            key: 2,\n            text: 'nav 3'\n        }\n    ];\n    @action onSignUp(item) {\n        // this.user.userNo = item.userNo;\n        this.user = {...item};\n        console.log('返回数据',this.user,item)\n    }\n}\n\nexport default new UserStore();","/**\n *\n * name: index\n * date: 2019-05-09\n * author: cengfucheng\n * about:  时间组件\n *\n */\n\nimport React from 'react';\n\nexport default function({date}) {\n    return (\n        <div>\n            <span>{date}</span>\n        </div>\n    )\n}","/**\n *\n * name: LoginAction\n * date: 2019-05-09\n * author: cengfucheng\n * about: login\n *\n */\n\nexport function LoginByUsername(username, password, token) {\n    // user login\n    console.log(username, password, token)\n    return {\n        type: 'login_user',\n        payload: {username, password, token}\n    }\n}\n\n","/**\n *\n * name: index\n * date: 2019-05-09\n * author: cengfucheng\n * about:  整合 action\n *\n */\nimport * as LoginAction from './LoginAction';\n\n// 导出 action 集合\nexport default {\n    ...LoginAction,\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./about\": [\n\t\t91,\n\t\t9,\n\t\t1\n\t],\n\t\"./about/\": [\n\t\t91,\n\t\t9,\n\t\t1\n\t],\n\t\"./about/index\": [\n\t\t91,\n\t\t9,\n\t\t1\n\t],\n\t\"./about/index.js\": [\n\t\t91,\n\t\t9,\n\t\t1\n\t],\n\t\"./home\": [\n\t\t62,\n\t\t9\n\t],\n\t\"./home/\": [\n\t\t62,\n\t\t9\n\t],\n\t\"./home/index\": [\n\t\t62,\n\t\t9\n\t],\n\t\"./home/index.js\": [\n\t\t62,\n\t\t9\n\t],\n\t\"./home/index.less\": [\n\t\t129,\n\t\t7\n\t],\n\t\"./login\": [\n\t\t63,\n\t\t9\n\t],\n\t\"./login/\": [\n\t\t63,\n\t\t9\n\t],\n\t\"./login/index\": [\n\t\t63,\n\t\t9\n\t],\n\t\"./login/index.js\": [\n\t\t63,\n\t\t9\n\t],\n\t\"./login/index.module.less\": [\n\t\t57,\n\t\t7\n\t],\n\t\"./register\": [\n\t\t90,\n\t\t9,\n\t\t0\n\t],\n\t\"./register/\": [\n\t\t90,\n\t\t9,\n\t\t0\n\t],\n\t\"./register/index\": [\n\t\t90,\n\t\t9,\n\t\t0\n\t],\n\t\"./register/index.js\": [\n\t\t90,\n\t\t9,\n\t\t0\n\t],\n\t\"./register/index.module.less\": [\n\t\t313,\n\t\t7,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 177;\nmodule.exports = webpackAsyncContext;","module.exports = __webpack_public_path__ + \"static/media/404.cb2515ac.svg\";","/**\n *\n * name: index\n * date: 2019-05-11\n * author: cengfucheng\n * about: 异步加载组件 mobx\n *\n */\n\nimport React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n *\n * name: config\n * date: 2019-05-19\n * author: cengfucheng\n * about:\n *\n */\n\n\nimport React from 'react';\nimport { HashRouter, Route, Switch} from 'react-router-dom';\nimport AsyncComponent from '@/components/asyncComponent';\n\nimport MobxLoadCompoent from '@/components/mobxLoadCompoent';\n\n// const importCompoent = filesPath => AsyncComponent(() => import(`${viewPath}${filesPath}`));\nconst importCompoent = filesPath => MobxLoadCompoent(() => import(`@/containers/${filesPath}`));\n\nexport const layoutComponent = [\n    {\n        path: '/home',\n        name: 'home',\n        exact: true,\n        component: importCompoent('home')\n    },\n    {\n        path: '/about',\n        name: 'about',\n        exact: true,\n        component: importCompoent('about')\n    },\n    // {\n    //     path: '/login',\n    //     name: 'login',\n    //     // exact: true,\n    //     component: importCompoent('login')\n    // },\n    {\n        path: '/',\n        name: 'home',\n        exact: true,\n        component: importCompoent('home')\n    },\n]","/**\n *\n * name: index\n * date: 2019-05-23\n * author: cengfucheng\n * about: 路由组件\n *\n */\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\n// export default function PrivateRouter({component: Component,...rest}){\nexport default function PrivateRouter(router){\n    // console.log(Component,'组件1')\n    // console.log({...rest},'组件2')\n    let Component = router.component;\n    return(\n        <Route render={ (props) => {\n            let logins = Cookies.get('logins');\n            console.log(props,'组件12');\n            if(logins && props.location.pathname != '/login'){\n                return <Component {...props}/>\n            }else {\n                console.log(logins,'重定向')\n                return <Redirect to='/login'/>\n            }\n        }} />\n    )\n}","/**\n *\n * name: index\n * date: 2019-05-11\n * author: cengfucheng\n * about: route config\n *\n */\nimport React, {Component} from 'react';\nimport { HashRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport { createHashHistory } from 'history';\n\nimport AsyncComponent from '@/components/asyncComponent';\nimport MobxLoadCompoent from '@/components/mobxLoadCompoent';\n\nimport App from '@/App.js';\nimport { layoutComponent } from './config';\n\nimport PrivateRouter from '@/components/privateRouter';\n\nconst history = createHashHistory();\n\n// export default function () {\n//     return (\n//         <HashRouter history={history}>\n//             <Switch>\n//                 <Route path='/home' exact component={MobxLoadCompoent( () => import('@/containers/home'))}/>\n//                 {/*<Route path='/home' exact component={AsyncComponent( () => import('@/containers/home'))}/>*/}\n//                 {/*<Route path='/about'  component={AsyncComponent( () => import('@/containers/about'))}/>*/}\n//                 <Route path='/about'  component={MobxLoadCompoent( () => import('@/containers/about'))}/>\n//                 {/*<Route path='/login' component={AsyncComponent( () => import('@/containers/login'))}/>*/}\n//                 {/*<Route path='/login' exact component={MobxLoadCompoent( () => import('@/containers/login'))}/>*/}\n//                 {/*<Route path='/' component={AsyncComponent( () => import('@/containers/home'))}/>*/}\n//                 <Route path='/' component={MobxLoadCompoent( () => import('@/containers/home'))}/>\n//                 <Redirect to='/'/>\n//             </Switch>\n//         </HashRouter>\n//\n//     )\n// }\n\n// export default function () {\n//     return (\n//         <HashRouter history={history}>\n//             <Switch>\n//                 <PrivateRouter path='/home' exact component={MobxLoadCompoent( () => import('@/containers/home'))}/>\n//                 {/*<Route path='/home' exact component={AsyncComponent( () => import('@/containers/home'))}/>*/}\n//                 {/*<Route path='/about'  component={AsyncComponent( () => import('@/containers/about'))}/>*/}\n//                 <PrivateRouter path='/about'  component={MobxLoadCompoent( () => import('@/containers/about'))}/>\n//                 {/*<Route path='/login' component={AsyncComponent( () => import('@/containers/login'))}/>*/}\n//                 {/*<Route path='/' component={AsyncComponent( () => import('@/containers/home'))}/>*/}\n//                 <Route path='/login' exact component={MobxLoadCompoent( () => import('@/containers/login'))}/>\n//                 <PrivateRouter path='/' component={MobxLoadCompoent( () => import('@/containers/home'))}/>\n//                 <Redirect exact from='/' to='/'/>\n//                 {/*<Redirect to='/'/>*/}\n//             </Switch>\n//         </HashRouter>\n//\n//     )\n// }\n\n// 改版，所有路由变成组件\n//\nconst routeComponents = routers => routers.map( (route, index) => {\n    // return <Route key={index} {...route} />\n\n    let router = <Route key={index} {...route}/>;\n    // return <Route key={index} {...route} />;\n    return <PrivateRouter key={index} {...route}/>\n});\n\n\nconst LayoutView = routeComponents(layoutComponent);\n\nexport default class Router extends Component{\n// export default function () {\n        render() {\n            return (\n                <HashRouter>\n                    <Route render ={ ({location, history}) => {\n                        console.log(LayoutView,1111)\n                        return (\n                            <Switch>\n                                {LayoutView}\n                                <Redirect exact from='/' to='/home'/>\n                            </Switch>\n                        )\n                    }}/>\n                </HashRouter>\n            )\n        }\n\n}","import React, { Component } from 'react';\nimport { NavLink, Link, Route, Redirect } from 'react-router-dom';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Cookies from 'js-cookie';\n\nimport Routers from '@/router';\nimport HomePage from './containers/home';\n\nimport MobxLoadCompoent from '@/components/mobxLoadCompoent';\n\nimport zfc from './assets/404.svg';\nimport { Button } from 'antd';\n\n\n// 暂时熟悉下antd的layout布局;\nimport { Layout, Menu, Icon} from \"antd\";\nimport {inject} from \"mobx-react\";\nconst { Header, Sider, Content } = Layout;\n\n@inject('appStore')\n@inject('userStore')\nclass App extends Component{\n    constructor(props) {\n        super(props)\n    }\n\n    state = {\n        collapsed: true,\n    }\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    onMenuClick = ({item, key, keyPath, domEvent}) => {\n        console.log('菜单事件',item, key, keyPath, domEvent)\n    }\n\n    componentDidMount() {\n        // console.log(this.context)\n    }\n\n    render() {\n        const { props } = this;\n        Array.from(props.userStore.menuList).forEach( (item, index) => {\n            // console.log(item)\n            // console.log(item.path)\n        })\n        return (\n            <div className=\"App\">\n                <Layout>\n                    <Sider trigger = {null} collapsible collapsed={this.state.collapsed} style={{background: '#fff'}}>\n                        <div style={{width: '100%', height:'100px'}}>\n                            {/*<img src={zfc}/>*/}\n\n                        </div>\n                        <Menu onClick={this.onMenuClick} mode=\"inline\" defaultSelectedKeys={['0']}>\n                            {\n                                Array.from(props.userStore.menuList).map( (item, index) => {\n                                        return ( <Menu.Item key={item.key}>\n                                            <NavLink to={item.path}>\n                                                <Icon type={item.icon} />\n                                                <span>{item.text}</span>\n                                            </NavLink>\n                                        </Menu.Item> )\n\n                                })\n                            }\n                        </Menu>\n                    </Sider>\n                    <Layout>\n                        <Header style={{background: '#ffffff',padding:0}}>\n                            <Icon\n                                className=\"trigger\"\n                                type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                                onClick={this.toggle}\n                            />\n                        </Header>\n                        <Content style={{background: '#FFFFFFF',height:'calc(100vh - 50px)'}}>\n\n                            {props.children}\n                        </Content>\n                    </Layout>\n                </Layout>\n                {/*<Button type=\"primary\">Primary</Button>*/}\n                {/*<header className=\"App-header\">*/}\n\n                    {/*<Link to='/about'>about</Link>*/}\n\n                {/*</header>*/}\n            </div>\n        );\n    }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createReactContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter, Switch } from 'react-router-dom';\n// import { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import { Provider } from 'react-redux';\nimport { Provider } from 'mobx-react';\n\nimport store from './store';\nimport Routers from '@/router';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nimport MobxLoadCompoent from '@/components/mobxLoadCompoent';\n\n\n// redux 方式\n// <Provider store={store}>\nReactDOM.render(\n        <Provider {...store}>\n            <HashRouter>\n                <Switch>\n                    <Route path='/login' component={MobxLoadCompoent( () => import('@/containers/login'))}></Route>\n                    <Route path='/register' component={MobxLoadCompoent( () => import('@/containers/register'))}></Route>\n                    <Route path='/'>\n                        <App>\n                            <Routers/>\n                        </App>\n                    </Route>\n                </Switch>\n\n            </HashRouter>\n        </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login--1O4gT\",\"login-content\":\"login-content--qfSxZ\",\"login-form\":\"login-form--9sqwA\",\"zfc\":\"zfc--rYN4D\"};","/**\n *\n * name: index\n * date: 2019-05-09\n * author: cengfucheng\n * about: home page\n *\n */\n\nimport React, { Component, PureComponent } from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport propTypes from 'prop-types';         // 属性类型监控\n\nimport { Route } from 'react-router-dom';\n\n// import ReactSvg from 'react-svg';\n\nimport Actions from '@/actions';\n\nimport DateView from '@/components/dateView';\n\nimport store from '@/store';\n\nimport './index.less';\n\nimport Login from '@/containers/login';\n\n\n// mobx 实现\nimport { observer, inject} from \"mobx-react\";\n\n// export default @connect(mapState, mapPropsEvent) class HomePage extends Component{\n//     constructor(props) {\n//         super(props)\n//     }\n//\n//     static propTypes = {\n//         username: propTypes.string,\n//     }\n//\n//\n//     componentDidMount() {\n//         // const { store } = this.context;\n//     }\n//\n//     onLogin = (data) => {\n//\n//         this.props.action.LoginByUsername('zfc','123','login');\n//         store.getState().userReducer.username = 'lz';\n//         console.log(store.getState(),1234);\n//         this.props.history.push('about');\n//         console.log(this.props.history,1234)\n//     }\n//\n//     render() {\n//         let props = this.props\n//         let { username } = store.getState().userReducer\n//         return (\n//             <div className='app-home' onClick={this.onLogin}>\n//                 <span>:{props.username}</span>\n//                 <span>:{username}</span>\n//                 home\n//                 <DateView date={123}/>\n//                 <main>\n//                     {/*<Route exact path='/home' component={Login}/>*/}\n//                 </main>\n//             </div>\n//         )\n//     }\n// }\n//\n// function mapState(state) {\n//     return {\n//         username: state.userReducer.username\n//     }\n// }\n//\n// function mapPropsEvent(dispatch) {\n//     return {\n//         action: bindActionCreators(Actions, dispatch)\n//     }\n// }\n// // export default connect(mapState, mapPropsEvent)(HomePage);\n\nexport default\n@inject('appStore')\n@inject('userStore')\n@observer\nclass HomePage extends Component{\n\n    // constructor(props) {\n    //     super(props)\n    // }\n    componentDidMount() {\n        // console.log(this.props,' stroe数据')\n    }\n\n    render() {\n        // let obj = this.props.userStore.user;\n        // console.log('数据',obj)\n        return (\n            <div>\n                home page\n                {this.props.userStore.user.userNo}\n            </div>\n        )\n    }\n}","/**\n *\n * name: index\n * date: 2019-05-19\n * author: cengfucheng\n * about: login\n *\n */\n\n// import './index.module.less';\nimport style from './index.module.less';\nimport React, { Component} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport Cookies from 'js-cookie';\n\nimport { Link } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'\n\n\nimport { inject, observer} from \"mobx-react\";\n\n\nexport default\n@inject('userStore')\n@observer\n@Form.create({ name: 'normal_login' })\nclass LoginPage extends Component{\n    constructor(props) {\n        super(props)\n    }\n\n    onLoginSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('form: ', values);\n                fetch('http://127.0.0.1:3000/login',{\n                    method: 'POST',\n                    body: JSON.stringify(values),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                })\n                    .then( res => {\n                        return res.json();\n                    })\n                    .then( data => {\n                        console.log(data,123);\n                        this.props.userStore.onSignUp(data);\n                        Cookies.set('logins','zfc');\n                        this.props.history.push('/');\n                    })\n                    .catch( err => {\n                        console.log(err)\n                    })\n\n                //\n                //\n                console.log(this.props,111);\n            }\n        });\n    }\n\n    render() {\n\n        let bgColor = {\n            color: 'red',\n        }\n\n        const { getFieldDecorator } = this.props.form;\n        // console.log(style['login-form'],11223311)\n        return (\n            <div style={bgColor} className={`${style.login} ${style.zfc}`}>\n                <div className={`${style['login-content']}`}>\n                    <Form onSubmit={this.onLoginSubmit} className={`${style['login-form']}`}>\n                        <Form.Item>\n                            {getFieldDecorator('username', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入您的账号名'\n                                    }]\n                            })(\n                                <Input prefix={<Icon type='user' style={{color: 'rgba(1,1,1,1)'}} />}\n                                       placeholder='账号'\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入您的密码'\n                                    }\n                                ]\n                            })(\n                                <Input prefix={<Icon type='lock' style={{color: 'rgba(1,1,1,1)'}}/>}\n                                       type='password'\n                                       placeholder='请输入密码'\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            <p>\n                                {getFieldDecorator('remember', {\n                                    valuePropName: 'checked',\n                                    initialValue: true,\n                                })(<Checkbox>记住账号</Checkbox>)}\n                                <Link style={{float: 'right'}} to='/login'>忘记密码</Link>\n                            </p>\n                            <Button style={{width:'100%'}} type=\"primary\" htmlType=\"submit\">sign up</Button>\n                            <p>\n                                <Link to='/register'>注册</Link>\n                                {/*<a href='/register'>注册</a>*/}\n                            </p>\n                        </Form.Item>\n\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n// export default\n// @Form.create({ name: 'normal_login' })\n// @connect(mapPropsState, mapPropsDispatch)\n// class LoginPage extends Component{\n//     constructor(props) {\n//         super(props)\n//     }\n//\n//     render() {\n//         const { getFieldDecorator } = this.props.form;\n//         return (\n//             <Form>\n//                 <Form.Item>\n//                     {getFieldDecorator('username', {\n//                         rules: [\n//                             {\n//                                 requestId: true,\n//                                 message: '请输入您的账号名'\n//                             }]\n//                     })(\n//                         <Input prefix={<Icon type='user' style={{color: 'rgba(1,1,1,1)'}} />}\n//                                placeholder='账号'\n//                         />\n//                     )}\n//                 </Form.Item>\n//             </Form>\n//         )\n//     }\n// }\n//\n// function mapPropsState(state) {\n//     return {\n//         // state: xx.xx\n//     }\n// }\n//\n// function mapPropsDispatch(dispatch) {\n//     return {\n//         // action: bindActionCreators(Actions, dispatch)\n//     }\n// }\n\n// 没用装饰器的时候～～～用了装饰器，就不在这么傻了～\n// const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(LoginPage);\n// export default connect(mapPropsState, mapPropsDispatch)(WrappedNormalLoginForm);\n\n// export default connect(mapPropsState, mapPropsDispatch)(LoginPage);"],"sourceRoot":""}